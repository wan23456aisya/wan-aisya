#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>

int main() {
  int sockfd;
  struct sockaddr_in serveraddr, clientaddr;
  int random_number;
  int is_prime;

  // Create a socket
  sockfd = socket(AF_INET, SOCK_STREAM, 0);
  if (sockfd == -1) {
    perror("socket");
    exit(1);
  }

  // Bind the socket to a port
  serveraddr.sin_family = AF_INET;
  serveraddr.sin_port = htons(8080);
  serveraddr.sin_addr.s_addr = INADDR_ANY;
  if (bind(sockfd, (struct sockaddr *)&serveraddr, sizeof(serveraddr)) == -1) {
    perror("bind");
    exit(1);
  }

  // Listen for connections
  listen(sockfd, 1);

  // Accept a connection
  socklen_t clientlen = sizeof(clientaddr);
  int clientfd = accept(sockfd, (struct sockaddr *)&clientaddr, &clientlen);
  if (clientfd == -1) {
    perror("accept");
    exit(1);
  }

  // Receive the random number from the client
  recv(clientfd, &random_number, sizeof(random_number), 0);

  // Check if the number is prime
  is_prime = is_prime_number(random_number);

  // Send the result to the client
  send(clientfd, &is_prime, sizeof(is_prime), 0);

  // Close the sockets
  close(sockfd);
  close(clientfd);

  return 0;
}

int is_prime_number(int number) {
  if (number <= 1) {
    return 0;
  }

  for (int i = 2; i < number; i++) {
    if (number % i == 0) {
      return 0;
    }
  }

  return 1;
}
